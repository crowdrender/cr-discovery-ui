import getQueryStringParameterByName from"../modules/QueryString.js";const amount=+getQueryStringParameterByName("amount");initialisePaymentForm(amount);const handleCardChange=({error:a})=>{const b=document.getElementById("card-errors");b.textContent=a?a.message:""};async function initialisePaymentForm(a){if(!a)return void alert("Amount not specified");setupPaymentSummary(a);const{clientSecret:b,publicKey:c}=await createPayment(a),d=Stripe(c),e=d.elements(),f=createCard(e);f.mount("#card-element"),f.on("change",handleCardChange);const g=document.getElementById("payment-form");g.addEventListener("submit",async a=>{var c,e;a.preventDefault();const g=await d.confirmCardPayment(b,{payment_method:{card:f,billing_details:{name:null===(e=null===(c=window)||void 0===c?void 0:c.user)||void 0===e?void 0:e.email}}});showResultFeedback(g)})}function setupPaymentSummary(a){const b=document.querySelector(".payment-summary"),c=document.createElement("p");c.style.textAlign="center",c.innerText=`$${formatAsCurrency(a)}`,b.appendChild(c)}function formatAsCurrency(a){return(a/100).toFixed(2)}async function createPayment(a){const b=await fetch(`/payment/create?amount=${a}`).then(a=>a.json());return{clientSecret:b.client_secret,publicKey:b.public_key}}function createCard(a){const b=a.create("card",{style:{base:{color:"#32325d"}}});return b}function showResultFeedback(a){return a.error?void console.log(a.error.message):"succeeded"===a.paymentIntent.status?void(alert("Payment success"),location.href="/profile"):void alert("payment failed")}